name: CI Pipeline

on:
  push:
    branches: ['main', 'stream-*', 'feature/*']
  pull_request:
    branches: ['main']
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  CACHE_VERSION: v1

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy pytest pytest-cov
      - name: Run linting
        run: ruff check . --output-format=github
      - name: Run type checking
        run: mypy src --no-error-summary || true
        continue-on-error: true
      - name: Check formatting
        run: ruff format --check .
  
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-12]
        python-version: ['3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
      - name: Run tests
        run: pytest -v --cov=src --cov-report=xml --cov-fail-under=85
  
  validate:
    name: Validate Manifests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: pip install jsonschema pyyaml
      - name: Validate manifests
        run: python tools/validate_manifests.py
  
  integration:
    name: Integration Tests
    runs-on: ubuntu-22.04
    needs: [quality, test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Test deterministic wrapper
        run: |
          bash scripts/deterministic.sh echo "Integration test"
          test -f .ai/state.json
  
  build-status:
    name: Build Status
    runs-on: ubuntu-22.04
    needs: [quality, test, validate, integration]
    if: always()
    steps:
      - name: Check build status
        run: |
          if [ "${{ contains(needs.*.result, 'failure') }}" == "true" ]; then
            echo "Build failed"
            exit 1
          else
            echo "Build successful"
          fi

