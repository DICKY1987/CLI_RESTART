/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Patch =
  | Tier0FileOperations
  | Tier1UnifiedDiff
  | Tier2JSONPatchRFC6902Subset
  | Tier3PythonASTViaLibCSTOptional;

/**
 * Extended edit contracts schema with verification gates and 100% accuracy guarantees
 */
export interface EnhancedEditContractsBundleForCodex {
  version: "1.0" | "2.0";
  /**
   * UUID linking to parent modification contract
   */
  contract_id: string;
  /**
   * Key for ensuring idempotent operations
   */
  idempotency_key?: string;
  /**
   * Codex version that generated this bundle
   */
  generated_by: string;
  /**
   * Validation strictness level
   */
  validation_level: "strict" | "moderate" | "permissive";
  /**
   * How to handle rollback on failure
   */
  rollback_strategy?: "automatic" | "manual" | "disabled";
  /**
   * @minItems 1
   */
  patches: [Patch, ...Patch[]];
  /**
   * Gates that must pass for modification to be considered successful
   *
   * @minItems 1
   */
  verification_gates: [VerificationGate, ...VerificationGate[]];
  completion_certificate?: CompletionCertificate;
  [k: string]: unknown;
}
export interface Tier0FileOperations {
  type: "file_ops";
  target: Target;
  ops: (
    | {
        op: "create";
        content: string;
        encoding?: string;
        eol?: "lf" | "crlf";
        pre?: Hash;
      }
    | {
        op: "delete";
        pre?: Hash;
      }
    | {
        op: "move";
        to: string;
        pre?: Hash;
      }
    | {
        op: "chmod";
        mode: number;
      }
  )[];
  post?: PostAssert;
  on_conflict?: "fail" | "open_conflict_file";
  atomic_write?: boolean;
}
export interface Target {
  path: string;
}
export interface Hash {
  sha256: string;
}
export interface PostAssert {
  assert: (
    | {
        regex_present: {
          pattern: string;
          flags?: string;
        };
      }
    | {
        regex_absent: {
          pattern: string;
          flags?: string;
        };
      }
    | {
        hash_changes: boolean;
      }
    | {
        json_pointer_exists: string;
      }
    | {
        syntax_valid: {
          language:
            | "python"
            | "javascript"
            | "typescript"
            | "java"
            | "go"
            | "rust";
        };
      }
    | {
        imports_resolve: boolean;
      }
    | {
        type_check_pass: {
          tool?: "mypy" | "typescript" | "flow" | "pyright";
        };
      }
  )[];
}
export interface Tier1UnifiedDiff {
  type: "unified_diff";
  target: Target;
  pre: Hash;
  anchors?: {
    context_lines?: number;
  };
  ops: {
    id?: string;
    diff: string;
    apply_mode?: "strict" | "fuzzy";
  }[];
  post?: PostAssert;
  on_conflict?: "fail" | "open_conflict_file";
  atomic_write?: boolean;
}
export interface Tier2JSONPatchRFC6902Subset {
  type: "json_patch";
  target: Target;
  pre: Hash;
  ops: {
    op: "add" | "remove" | "replace";
    path: string;
    value?: unknown;
  }[];
  post?: PostAssert;
  on_conflict?: "fail" | "open_conflict_file";
  atomic_write?: boolean;
}
export interface Tier3PythonASTViaLibCSTOptional {
  type: "python_ast";
  target: Target;
  pre: Hash;
  ops: {
    op: "ensure_import" | "ensure_function" | "insert_call_kwarg";
    module?: string;
    alias?: string | null;
    name?: string;
    signature?: string;
    body?: string;
    selector?: {
      [k: string]: unknown;
    };
    arg?: string;
    value?: string;
    [k: string]: unknown;
  }[];
  post?: PostAssert;
  on_conflict?: "fail" | "open_conflict_file";
  atomic_write?: boolean;
}
export interface VerificationGate {
  gate:
    | "syntax_check"
    | "import_resolution"
    | "type_check"
    | "test_suite"
    | "coverage_check"
    | "security_scan"
    | "dependency_check"
    | "integration_test"
    | "performance_test";
  required: boolean;
  configuration?: {
    timeout_seconds?: number;
    tool?: string;
    threshold?: number;
    command?: string;
    [k: string]: unknown;
  };
  failure_action?: "abort" | "rollback" | "continue" | "retry";
}
export interface CompletionCertificate {
  modification_id?: string;
  completion_timestamp?: string;
  success_criteria_met?: boolean;
  gates_passed?: string[];
  test_results?: {
    tests_run?: number;
    tests_passed?: number;
    coverage_percentage?: number;
    [k: string]: unknown;
  };
  code_quality_metrics?: {
    syntax_errors?: number;
    type_errors?: number;
    import_errors?: number;
    security_issues?: number;
    [k: string]: unknown;
  };
  codex_attestation?: string;
}
