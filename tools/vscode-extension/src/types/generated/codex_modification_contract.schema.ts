/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Master contract schema for Codex-driven code modifications with 100% accuracy guarantees
 */
export interface CodexModificationContract {
  /**
   * Version of the modification contract schema
   */
  contract_version: "2.0";
  /**
   * Unique UUID for this modification
   */
  modification_id: string;
  /**
   * ISO 8601 timestamp when contract was generated
   */
  timestamp: string;
  /**
   * SHA256 hash signature of the modification contract
   */
  codex_signature?: string;
  specification: {
    /**
     * Precise description of what to modify
     */
    objective: string;
    /**
     * Measurable outcomes that define success
     *
     * @minItems 1
     */
    success_criteria: [string, ...string[]];
    scope: {
      file_patterns: string[];
      function_names?: string[];
      class_names?: string[];
      max_files_affected?: number;
    };
    constraints: {
      preserve_interfaces?: boolean;
      maintain_backwards_compatibility?: boolean;
      forbidden_modifications?: string[];
      required_dependencies?: string[];
    };
  };
  baseline: {
    /**
     * Git commit hash of baseline state
     */
    repository_hash: string;
    /**
     * SHA256 checksums of all files in scope
     */
    file_checksums: {
      /**
       * This interface was referenced by `undefined`'s JSON-Schema definition
       * via the `patternProperty` "^.+$".
       */
      [k: string]: string;
    };
    test_baseline: {
      all_tests_pass: true;
      test_command: string;
      coverage_percentage: number;
    };
    /**
     * Locked dependency versions
     */
    dependency_versions?: {
      /**
       * This interface was referenced by `undefined`'s JSON-Schema definition
       * via the `patternProperty` "^.+$".
       */
      [k: string]: string;
    };
  };
  modifications: {
    type: "edit_contract_bundle";
    /**
     * Path to the edit contract bundle
     */
    bundle_path: string;
    /**
     * Schema to validate the bundle against
     */
    validation_schema: string;
  };
  /**
   * Ordered list of validation gates that must pass
   *
   * @minItems 1
   */
  verification_gates: [
    {
      gate_type:
        | "syntax_check"
        | "import_resolution"
        | "type_check"
        | "test_suite"
        | "coverage_check"
        | "integration_test"
        | "security_scan"
        | "dependency_check";
      required: boolean;
      failure_action:
        | "abort_modification"
        | "rollback"
        | "continue_with_warning";
      /**
       * Gate-specific configuration parameters
       */
      configuration?: {
        [k: string]: unknown;
      };
      timeout_seconds?: number;
    },
    ...{
      gate_type:
        | "syntax_check"
        | "import_resolution"
        | "type_check"
        | "test_suite"
        | "coverage_check"
        | "integration_test"
        | "security_scan"
        | "dependency_check";
      required: boolean;
      failure_action:
        | "abort_modification"
        | "rollback"
        | "continue_with_warning";
      /**
       * Gate-specific configuration parameters
       */
      configuration?: {
        [k: string]: unknown;
      };
      timeout_seconds?: number;
    }[],
  ];
  rollback_strategy: {
    enabled: true;
    /**
     * @minItems 1
     */
    triggers: [
      (
        | "syntax_error"
        | "test_failure"
        | "gate_failure"
        | "user_abort"
        | "timeout"
        | "dependency_conflict"
      ),
      ...(
        | "syntax_error"
        | "test_failure"
        | "gate_failure"
        | "user_abort"
        | "timeout"
        | "dependency_conflict"
      )[],
    ];
    restoration_method: "git_reset_hard" | "file_restore" | "snapshot_restore";
    backup_verification?: {
      enabled: true;
      integrity_check: true;
    };
  };
  cost_tracking?: {
    max_tokens?: number;
    cost_per_1k_tokens?: number;
    budget_limit_usd?: number;
  };
  metadata?: {
    created_by?: string;
    project_name?: string;
    priority?: "low" | "medium" | "high" | "critical";
    estimated_duration_minutes?: number;
  };
}
