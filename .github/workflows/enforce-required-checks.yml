name: Enforce Required Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  enforce:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for required workflows to pass
        uses: actions/github-script@v7
        with:
          script: |
            const requiredWorkflows = [
              'ci-powershell.yml',
              'supply-chain.yml',
            ];
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const headSha = context.payload.pull_request.head.sha;
            const timeoutMs = 30 * 60 * 1000; // 30 minutes
            const intervalMs = 10000; // 10 seconds

            function sleep(ms) { return new Promise(res => setTimeout(res, ms)); }

            async function workflowRunSucceeded(workflow_id) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner, repo, workflow_id,
                head_sha: headSha,
                event: 'pull_request',
                per_page: 50,
              });
              if (!runs.data.workflow_runs || runs.data.workflow_runs.length === 0) return null; // not started yet
              const run = runs.data.workflow_runs.find(r => r.head_sha === headSha);
              if (!run) return null;
              return run.conclusion === 'success' ? true : (run.status === 'completed' ? false : null);
            }

            const start = Date.now();
            while (Date.now() - start < timeoutMs) {
              let allOk = true;
              for (const wf of requiredWorkflows) {
                const result = await workflowRunSucceeded(wf);
                core.info(`Workflow ${wf} state: ${result}`);
                if (result === true) continue;
                if (result === false) {
                  core.setFailed(`Required workflow failed: ${wf}`);
                  return;
                }
                allOk = false; // not finished yet
              }
              if (allOk) { core.info('All required workflows succeeded.'); return; }
              await sleep(intervalMs);
            }
            core.setFailed('Timeout waiting for required workflows to succeed.');
