name: merge-train
run-name: "Merge Train: ${{ github.ref_name }}"

on:
  push:
    branches:
      - 'workstream/**'
  workflow_dispatch:
    inputs:
      skip_verification:
        description: 'Skip verification gates'
        type: boolean
        default: false

concurrency:
  group: merge-train-${{ github.ref }}
  cancel-in-progress: false  # Never cancel mid-merge

jobs:
  merge-train:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install tooling
        run: |
          # Python tools
          pip install ruff mypy jsonschema pyyaml

          # Node tools
          npm install --global npm@latest

          # jq/yq for structural merges
          sudo apt-get update
          sudo apt-get install -y jq
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Install PowerShell
        run: |
          wget -q https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y powershell

      - name: Validate tooling
        shell: pwsh
        run: ./scripts/Check-Tooling.ps1

      - name: Validate policy
        shell: pwsh
        run: ./scripts/Validate-Policy.ps1

      - name: Configure Git
        run: |
          git config user.name "Merge Train Bot"
          git config user.email "merge-train@company.com"

      - name: Setup merge drivers
        shell: pwsh
        run: ./scripts/setup-merge-drivers.ps1

      - name: Restore rerere cache
        uses: actions/cache/restore@v3
        with:
          path: .git/rr-cache
          key: rerere-${{ github.repository }}-${{ github.sha }}
          restore-keys: |
            rerere-${{ github.repository }}-

      - name: PreFlight conflict analysis
        shell: pwsh
        continue-on-error: true
        run: |
          ./scripts/PreFlight-Check.ps1 -Target origin/main -Verbose

      - name: Run merge-train
        id: merge_train
        shell: pwsh
        run: |
          $skipVerify = '${{ inputs.skip_verification }}' -eq 'true'
          if ($skipVerify) {
            ./scripts/AutoMerge-Workstream.ps1 -SkipVerification -Verbose
          } else {
            ./scripts/AutoMerge-Workstream.ps1 -Verbose
          }

      - name: Save rerere cache
        if: always()
        uses: actions/cache/save@v3
        with:
          path: .git/rr-cache
          key: rerere-${{ github.repository }}-${{ github.sha }}

      - name: Upload audit logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: merge-audit-${{ github.run_number }}
          path: |
            .git/merge-audit.jsonl
            .git/merge-fallback.log
          retention-days: 90

      - name: Notify on quarantine
        if: failure()
        uses: slackapi/slack-github-action@v1
        with:
          webhook-url: ${{ secrets.SLACK_MERGE_WEBHOOK }}
          payload: |
            {
              "text": "ðŸ”’ Merge quarantined: ${{ github.ref_name }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Merge Train Quarantine*\n\nBranch: `${{ github.ref_name }}`\nRun: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>"
                  }
                }
              ]
            }

      - name: Comment on PR
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`
            });

            if (pr.data.length > 0) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.data[0].number,
                body: `ðŸ”’ **Merge Quarantined**\n\nThis branch has been quarantined and requires manual review.\n\nCheck the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.`
              });
            }
