{
  "name": "WS-F Remaining Modifications",
  "generated_at": "2025-10-24T06:11:48Z",
  "context": {
    "base_branch": "main",
    "applied_branch": "ws-f-mods-applied",
    "working_branch": "ws-f-remaining-mods",
    "pr_open": "https://github.com/DICKY1987/CLI_RESTART/pull/121"
  },
  "goals": [
    "Tighten Ruff rules gradually (undo temporary ignores)",
    "Modernize typing (PEP 585, PEP 604)",
    "Address mypy errors to re-enable blocking type-check",
    "Re-enable PowerShell tests in consolidated run when environment is ready"
  ],
  "ruff_todo": {
    "currently_ignored": [
      "UP006",
      "UP035",
      "UP015",
      "UP045",
      "E741",
      "B017",
      "B027",
      "B904",
      "C401",
      "F841",
      "F821",
      "F811",
      "E402"
    ],
    "next_to_enable": [
      {"rule": "B904", "rationale": "Improve exception chaining clarity"},
      {"rule": "F841", "rationale": "Remove unused local vars"},
      {"rule": "C401", "rationale": "Simplify generator → comprehension"}
    ]
  },
  "mypy_summary": {
    "status": "non_blocking",
    "representative_errors": [
      {
        "file": "src/cli_multi_rapid/coordination/coordinator.py",
        "issues": ["Incompatible types in assignment (list[list[str]] vs None)"]
      },
      {
        "file": "src/idempotency/queues.py",
        "issues": ["Need type annotation for QUEUE"]
      },
      {
        "file": "src/websocket/connection_manager.py",
        "issues": ["Use typing.Any instead of any; attr-defined errors on send_text"]
      },
      {
        "file": "src/cli_multi_rapid/benchmarking/workflow_optimizer.py",
        "issues": ["Add type annotations for recommendations, grouped"]
      },
      {
        "file": "src/cli_multi_rapid/gui_terminal/ui/*.py",
        "issues": ["Duplicate class definitions, type mismatches"]
      }
    ],
    "proposed_plan": [
      "Add or refine annotations for reported vars",
      "Replace deprecated typing aliases (List/Dict/Optional/Type)",
      "Fix invalid uses like any → Any; clean redefs"
    ]
  },
  "file_level_tasks": [
    {
      "id": "TYP-PR-CMDS",
      "files": [
        "src/cli_multi_rapid/commands/pr_commands.py",
        "src/cli_multi_rapid/commands/verify_commands.py"
      ],
      "actions": [
        "Replace typing.List with list",
        "Adjust signatures and variable annotations accordingly"
      ],
      "rules_to_enable_after": ["UP006", "UP035"]
    },
    {
      "id": "TYP-CONFIG-VALIDATOR",
      "files": ["src/cli_multi_rapid/config/validator.py"],
      "actions": [
        "Replace typing.Dict/List with dict/list",
        "Annotate function params/returns where missing"
      ],
      "rules_to_enable_after": ["UP006", "UP035"]
    },
    {
      "id": "TYP-ARTIFACT-MANAGER",
      "files": ["src/cli_multi_rapid/core/artifact_manager.py"],
      "actions": [
        "Modernize typing (List/Dict → list/dict)",
        "Tighten types for internal data structures"
      ],
      "rules_to_enable_after": ["UP006", "UP035"]
    },
    {
      "id": "MYPY-WEBSOCKET",
      "files": ["src/websocket/connection_manager.py"],
      "actions": [
        "Import Any from typing; use Any",
        "Add accurate type hints for connection objects"
      ],
      "unblocks": ["mypy valid-type, attr-defined"]
    },
    {
      "id": "MYPY-GUI-DUPES",
      "files": [
        "src/gui_terminal/gui_bridge.py",
        "src/gui_terminal/ui/*"
      ],
      "actions": [
        "Remove duplicate class definitions",
        "Add missing annotations for collections"
      ],
      "unblocks": ["mypy no-redef, var-annotated"]
    },
    {
      "id": "CLEAN-UNUSED-VARS",
      "files": [
        "src/cli_multi_rapid/commands/cost_commands.py",
        "src/cli_multi_rapid/benchmarking/performance_profiler.py"
      ],
      "actions": [
        "Remove or use assigned-but-unused locals",
        "Convert trivial generators to comprehensions"
      ],
      "rules_to_enable_after": ["F841", "C401"]
    }
  ],
  "powershell_tests": {
    "current": "Skipped in consolidated Makefile target",
    "issues": [
      "Import-PowerShellDataFile not available on some shells",
      "Environment lacks Pester module with correct version"
    ],
    "plan": [
      "Add availability guard for Import-PowerShellDataFile",
      "Gate PS tests behind check or run only in Windows CI matrix",
      "Re-enable in `make test` once preconditions are reliable"
    ]
  },
  "proposed_config_changes": [
    {
      "file": "pyproject.toml",
      "changes": [
        "Move from [tool.ruff] to [tool.ruff.lint] (done)",
        "Incrementally remove ignores as fixes land",
        "Re-enable mypy as blocking after key modules are fixed"
      ]
    }
  ],
  "success_criteria": [
    "Ruff passes with UP006/UP035 enabled",
    "Mypy passes (blocking) on src/",
    "PowerShell tests either passing or clearly gated"
  ]
}


