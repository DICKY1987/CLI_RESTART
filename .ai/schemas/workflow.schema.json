{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "CLI Orchestrator Workflow Schema",
  "description": "Schema for validating CLI orchestrator workflow YAML files",
  "type": "object",
  "required": ["name"],
  "anyOf": [
    {"required": ["steps"]},
    {"required": ["phases"]}
  ],
  "properties": {
    "name": {
      "type": "string",
      "description": "Workflow name",
      "minLength": 1
    },
    "version": {
      "type": "string",
      "description": "Workflow version",
      "default": "1.0"
    },
    "description": {
      "type": "string",
      "description": "Optional workflow description"
    },
    "metadata": {
      "type": "object",
      "description": "Workflow metadata and coordination settings",
      "properties": {
        "orchestration_pattern": {
          "type": "string",
          "enum": ["sequential", "parallel", "ipt_wt", "multi_stream"],
          "description": "Orchestration pattern for workflow execution",
          "default": "sequential"
        },
        "cost_budget": {
          "type": "number",
          "minimum": 0,
          "description": "Total cost budget for workflow execution"
        },
        "coordination": {
          "type": "object",
          "description": "Multi-agent coordination settings",
          "properties": {
            "file_scope": {
              "type": "array",
              "items": {"type": "string"},
              "description": "File patterns that this workflow will modify"
            },
            "scope_mode": {
              "type": "string",
              "enum": ["exclusive", "shared", "read-only"],
              "description": "Access mode for file scope",
              "default": "exclusive"
            },
            "risk_level": {
              "type": "string",
              "enum": ["low", "medium", "high"],
              "description": "Risk level for workflow execution",
              "default": "medium"
            },
            "max_parallel": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10,
              "description": "Maximum number of parallel executions",
              "default": 3
            },
            "priority": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10,
              "description": "Execution priority (higher = earlier)",
              "default": 1
            },
            "branch_strategy": {
              "type": "string",
              "enum": ["feature", "hotfix", "stream", "coordination"],
              "description": "Git branch strategy for workflow",
              "default": "feature"
            },
            "merge_queue": {
              "type": "object",
              "description": "Merge queue configuration",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Enable merge queue for this workflow",
                  "default": true
                },
                "verification_level": {
                  "type": "string",
                  "enum": ["minimal", "standard", "comprehensive"],
                  "description": "Verification level for merge queue",
                  "default": "standard"
                },
                "quality_gates": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["lint", "test", "typecheck", "security", "coverage", "performance"]
                  },
                  "description": "Quality gates to run before merge",
                  "default": ["lint", "test"]
                }
              }
            }
          }
        }
      }
    },
    "roles": {
      "type": "object",
      "description": "IPT-WT role definitions",
      "properties": {
        "ipt": {
          "type": "object",
          "description": "Intelligent Planning Tool role configuration",
          "properties": {
            "tools": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Tools available to IPT role"
            },
            "responsibilities": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Responsibilities of IPT role"
            }
          }
        },
        "wt": {
          "type": "object",
          "description": "Worker Tool role configuration",
          "properties": {
            "tools": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Tools available to WT role"
            },
            "responsibilities": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Responsibilities of WT role"
            }
          }
        },
        "coordinator": {
          "type": "object",
          "description": "Coordination role configuration",
          "properties": {
            "tools": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Tools available to coordinator role"
            },
            "responsibilities": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Responsibilities of coordinator role"
            }
          }
        }
      }
    },
    "phases": {
      "type": "array",
      "description": "IPT-WT workflow phases",
      "items": {
        "type": "object",
        "required": ["id", "role", "tasks"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Phase identifier",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "Human-readable phase name"
          },
          "role": {
            "type": "string",
            "enum": ["ipt", "wt", "coordinator"],
            "description": "Role that executes this phase"
          },
          "parallel": {
            "type": "boolean",
            "description": "Whether this phase can run in parallel",
            "default": false
          },
          "priority": {
            "type": "integer",
            "minimum": 1,
            "description": "Phase execution priority",
            "default": 1
          },
          "depends_on": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Phase dependencies (must complete before this phase)"
          },
          "tasks": {
            "type": "array",
            "minItems": 1,
            "description": "Tasks in this phase",
            "items": {
              "oneOf": [
                {"type": "string"},
                {
                  "type": "object",
                  "required": ["name"],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "actor": {
                      "type": "string",
                      "description": "Actor to execute this task"
                    },
                    "file_scope": {
                      "type": "array",
                      "items": {"type": "string"},
                      "description": "File patterns for this task"
                    },
                    "scope_mode": {
                      "type": "string",
                      "enum": ["exclusive", "shared", "read-only"],
                      "default": "exclusive"
                    },
                    "with": {
                      "type": "object",
                      "description": "Task configuration parameters"
                    }
                  }
                }
              ]
            }
          },
          "file_scope": {
            "type": "array",
            "items": {"type": "string"},
            "description": "File patterns that this phase will modify"
          },
          "scope_mode": {
            "type": "string",
            "enum": ["exclusive", "shared", "read-only"],
            "description": "Access mode for phase file scope",
            "default": "exclusive"
          },
          "timeout_minutes": {
            "type": "integer",
            "minimum": 1,
            "description": "Maximum phase execution time"
          }
        }
      }
    },
    "inputs": {
      "type": "object",
      "description": "Workflow input parameters",
      "properties": {
        "files": {
          "oneOf": [
            {"type": "string"},
            {"type": "array", "items": {"type": "string"}}
          ],
          "description": "File patterns to process"
        },
        "lane": {
          "type": "string",
          "description": "Git branch lane for work"
        }
      }
    },
    "policy": {
      "type": "object",
      "description": "Workflow execution policies",
      "properties": {
        "max_tokens": {
          "type": "integer",
          "minimum": 0,
          "description": "Maximum tokens to spend on AI operations"
        },
        "prefer_deterministic": {
          "type": "boolean",
          "description": "Prefer deterministic tools over AI when possible"
        },
        "timeout_minutes": {
          "type": "integer",
          "minimum": 1,
          "description": "Maximum workflow execution time"
        }
      }
    },
    "steps": {
      "type": "array",
      "minItems": 1,
      "description": "Workflow execution steps",
      "items": {
        "type": "object",
        "required": ["id", "name", "actor"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+$",
            "description": "Step identifier (e.g., '1.001')"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "Human-readable step name"
          },
          "actor": {
            "type": "string",
            "enum": [
              "vscode_diagnostics",
              "code_fixers",
              "ai_editor",
              "ai_analyst",
              "pytest_runner",
              "verifier",
              "git_ops",
              "github_integration"
            ],
            "description": "Actor/adapter to execute this step"
          },
          "with": {
            "type": "object",
            "description": "Step configuration parameters",
            "properties": {
              "analyzers": {
                "type": "array",
                "items": {"type": "string"},
                "description": "Diagnostic analyzers to run"
              },
              "tools": {
                "type": "array",
                "items": {"type": "string"},
                "description": "Tools to execute"
              },
              "tool": {
                "type": "string",
                "enum": ["aider", "claude", "gemini"],
                "description": "AI tool to use"
              },
              "strategy": {
                "type": "string",
                "enum": ["minimal-diff", "refactor", "comprehensive"],
                "description": "AI editing strategy"
              },
              "context": {
                "type": "object",
                "description": "Execution context for the step"
              },
              "path": {
                "type": "string",
                "description": "Path for testing or analysis"
              },
              "coverage": {
                "type": "boolean",
                "description": "Enable coverage reporting"
              },
              "checks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["type"],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["tests_pass", "diff_limits", "schema_valid"]
                    },
                    "from": {
                      "type": "string",
                      "description": "Artifact file to check"
                    },
                    "max_files": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "max_insertions": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "schema": {
                      "type": "string",
                      "description": "Schema file path"
                    }
                  }
                },
                "description": "Gate checks to perform"
              },
              "branch": {
                "type": "string",
                "description": "Git branch to use"
              },
              "commit_message_template": {
                "type": "string",
                "description": "Template for commit message"
              },
              "create_pr": {
                "type": "boolean",
                "description": "Create pull request"
              },
              "operation": {
                "type": "string",
                "enum": [
                  "status", "create_branch", "commit", "open_pr", "label", "assign",
                  "repo_analysis", "create_issue", "get_issues", "pr_review",
                  "release_info", "list_workflows", "bulk_label", "bulk_merge",
                  "create_release", "commit_analysis"
                ],
                "description": "Git/GitHub operation to perform"
              },
              "analysis_type": {
                "type": "string",
                "enum": [
                  "repository", "security", "code_quality", "performance",
                  "dependencies", "workflow_health", "issue_triage",
                  "pr_automation", "release_management"
                ],
                "description": "Type of GitHub analysis to perform"
              },
              "repo": {
                "type": "string",
                "description": "GitHub repository (owner/repo format)"
              },
              "pr_number": {
                "type": "integer",
                "minimum": 1,
                "description": "Pull request number for PR operations"
              },
              "issue_title": {
                "type": "string",
                "description": "Title for new GitHub issue"
              },
              "issue_body": {
                "type": "string",
                "description": "Body content for new GitHub issue"
              },
              "labels": {
                "type": "array",
                "items": {"type": "string"},
                "description": "Labels for GitHub issues/PRs"
              },
              "assignees": {
                "type": "array",
                "items": {"type": "string"},
                "description": "Assignees for GitHub issues/PRs"
              },
              "state": {
                "type": "string",
                "enum": ["open", "closed", "all"],
                "description": "State filter for GitHub issues/PRs"
              },
              "tag": {
                "type": "string",
                "description": "Git tag or 'latest' for release operations"
              }
            }
          },
          "when": {
            "type": "string",
            "description": "Condition for step execution (JavaScript-like expression)"
          },
          "retry": {
            "type": "object",
            "description": "Retry configuration",
            "properties": {
              "max": {
                "type": "integer",
                "minimum": 0,
                "maximum": 5,
                "description": "Maximum retry attempts"
              },
              "backoff": {
                "type": "string",
                "enum": ["linear", "exponential"],
                "default": "exponential",
                "description": "Backoff strategy"
              }
            }
          },
          "on_fail": {
            "type": "string",
            "enum": ["stop", "pause_for_review", "continue"],
            "default": "stop",
            "description": "Action to take on step failure"
          },
          "emits": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Artifacts emitted by this step"
          }
        }
      }
    }
  }
}
