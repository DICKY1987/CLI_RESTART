{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Type Check Gate",
  "description": "Verification gate for static type checking across multiple languages",
  "type": "object",
  "required": ["gate_type", "languages", "failure_action"],
  "properties": {
    "gate_type": {
      "type": "string",
      "const": "type_check"
    },
    "languages": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "enum": [
          "python",
          "typescript",
          "javascript",
          "java",
          "csharp",
          "go",
          "rust",
          "scala",
          "kotlin"
        ]
      },
      "description": "Languages to perform type checking on"
    },
    "type_checkers": {
      "type": "object",
      "patternProperties": {
        "^(python|typescript|javascript|java|csharp|go|rust|scala|kotlin)$": {
          "type": "object",
          "properties": {
            "tool": {
              "type": "string",
              "description": "Type checker tool name"
            },
            "command": {
              "type": "string",
              "description": "Command to run type checker"
            },
            "config_file": {
              "type": "string",
              "description": "Path to type checker configuration file"
            },
            "strict_mode": {
              "type": "boolean",
              "default": true,
              "description": "Enable strict type checking"
            },
            "ignore_errors": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Error codes to ignore"
            }
          },
          "required": ["tool", "command"]
        }
      },
      "description": "Language-specific type checking configuration",
      "default": {
        "python": {
          "tool": "mypy",
          "command": "mypy --strict",
          "config_file": "mypy.ini"
        },
        "typescript": {
          "tool": "tsc",
          "command": "tsc --noEmit --strict",
          "config_file": "tsconfig.json"
        },
        "javascript": {
          "tool": "flow",
          "command": "flow check",
          "config_file": ".flowconfig"
        }
      }
    },
    "error_threshold": {
      "type": "integer",
      "minimum": 0,
      "default": 0,
      "description": "Maximum number of type errors allowed"
    },
    "warning_threshold": {
      "type": "integer",
      "minimum": 0,
      "description": "Maximum number of type warnings allowed"
    },
    "include_patterns": {
      "type": "array",
      "items": {"type": "string"},
      "description": "File patterns to include in type checking",
      "default": ["src/**/*.py", "lib/**/*.ts", "**/*.java"]
    },
    "exclude_patterns": {
      "type": "array",
      "items": {"type": "string"},
      "description": "File patterns to exclude from type checking",
      "default": ["tests/**/*", "**/*.test.*", "node_modules/**/*"]
    },
    "timeout_seconds": {
      "type": "integer",
      "minimum": 1,
      "maximum": 600,
      "default": 120,
      "description": "Maximum time to wait for type checking"
    },
    "incremental_check": {
      "type": "boolean",
      "default": true,
      "description": "Use incremental type checking when available"
    },
    "cache_enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable type checker caching"
    },
    "follow_imports": {
      "type": "string",
      "enum": ["normal", "silent", "skip", "error"],
      "default": "normal",
      "description": "How to handle imports during type checking"
    },
    "failure_action": {
      "type": "string",
      "enum": ["abort_modification", "rollback", "continue_with_warning"],
      "default": "abort_modification",
      "description": "Action to take when type check fails"
    },
    "generate_report": {
      "type": "boolean",
      "default": true,
      "description": "Generate detailed type checking report"
    },
    "report_format": {
      "type": "string",
      "enum": ["json", "xml", "text", "junit"],
      "default": "json",
      "description": "Format for type checking report"
    }
  },
  "additionalProperties": false
}
