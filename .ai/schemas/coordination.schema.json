{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Multi-Agent Coordination Schema",
  "description": "Schema for validating multi-agent workflow coordination plans and execution artifacts",
  "type": "object",
  "required": ["coordination_id", "timestamp", "workflows"],
  "properties": {
    "coordination_id": {
      "type": "string",
      "pattern": "^coord_[0-9]{8}_[0-9]{6}$",
      "description": "Unique identifier for coordination session"
    },
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "Coordination session creation timestamp"
    },
    "workflows": {
      "type": "array",
      "minItems": 1,
      "description": "Workflows participating in coordination",
      "items": {
        "type": "object",
        "required": ["workflow_id", "status"],
        "properties": {
          "workflow_id": {
            "type": "string",
            "minLength": 1,
            "description": "Unique workflow identifier"
          },
          "branch": {
            "type": "string",
            "description": "Git branch for workflow execution"
          },
          "file_claims": {
            "type": "array",
            "description": "File scope claims for this workflow",
            "items": {
              "type": "object",
              "required": ["patterns", "mode"],
              "properties": {
                "patterns": {
                  "type": "array",
                  "items": {"type": "string"},
                  "minItems": 1,
                  "description": "File patterns claimed by workflow"
                },
                "mode": {
                  "type": "string",
                  "enum": ["exclusive", "shared", "read-only"],
                  "description": "Access mode for file patterns"
                },
                "priority": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 10,
                  "description": "Claim priority (higher = more important)"
                }
              }
            }
          },
          "status": {
            "type": "string",
            "enum": ["planning", "executing", "verifying", "ready", "merged", "failed", "cancelled"],
            "description": "Current workflow status"
          },
          "cost_used": {
            "type": "number",
            "minimum": 0,
            "description": "Tokens/cost consumed by workflow"
          },
          "cost_budget": {
            "type": "number",
            "minimum": 0,
            "description": "Allocated budget for workflow"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Workflow execution start time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "Workflow execution end time"
          },
          "artifacts": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Artifacts produced by workflow"
          },
          "error": {
            "type": "string",
            "description": "Error message if workflow failed"
          }
        }
      }
    },
    "conflicts": {
      "type": "array",
      "description": "Detected conflicts between workflows",
      "items": {
        "type": "object",
        "required": ["workflow_ids", "conflict_type"],
        "properties": {
          "workflow_ids": {
            "type": "array",
            "items": {"type": "string"},
            "minItems": 2,
            "description": "Workflows involved in conflict"
          },
          "conflict_type": {
            "type": "string",
            "enum": ["file_scope", "resource", "dependency", "priority"],
            "description": "Type of conflict detected"
          },
          "conflicting_patterns": {
            "type": "array",
            "items": {"type": "string"},
            "description": "File patterns causing conflict"
          },
          "resolution": {
            "type": "string",
            "enum": ["queue", "reject", "manual", "priority_override"],
            "description": "Resolution strategy for conflict"
          },
          "details": {
            "type": "string",
            "description": "Detailed conflict description"
          }
        }
      }
    },
    "execution_plan": {
      "type": "object",
      "description": "Coordinated execution plan",
      "properties": {
        "execution_order": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Sequential execution order of workflows"
        },
        "parallel_groups": {
          "type": "array",
          "description": "Groups of workflows that can run in parallel",
          "items": {
            "type": "array",
            "items": {"type": "string"},
            "minItems": 1
          }
        },
        "dependency_graph": {
          "type": "object",
          "description": "Workflow dependency graph",
          "properties": {
            "nodes": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["id", "workflow_id"],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Node identifier"
                  },
                  "workflow_id": {
                    "type": "string",
                    "description": "Associated workflow ID"
                  },
                  "phase_id": {
                    "type": "string",
                    "description": "Associated phase ID (for IPT-WT)"
                  },
                  "dependencies": {
                    "type": "array",
                    "items": {"type": "string"},
                    "description": "Dependencies of this node"
                  },
                  "can_start_immediately": {
                    "type": "boolean",
                    "description": "Whether this node can start without waiting"
                  }
                }
              }
            }
          }
        }
      }
    },
    "merge_queue": {
      "type": "object",
      "description": "Merge queue configuration and status",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether merge queue is enabled",
          "default": true
        },
        "queue": {
          "type": "array",
          "description": "Items in merge queue",
          "items": {
            "type": "object",
            "required": ["branch", "workflow_id", "status"],
            "properties": {
              "branch": {
                "type": "string",
                "description": "Git branch to merge"
              },
              "workflow_id": {
                "type": "string",
                "description": "Associated workflow identifier"
              },
              "priority": {
                "type": "integer",
                "minimum": 1,
                "description": "Merge priority (higher = earlier)"
              },
              "status": {
                "type": "string",
                "enum": ["queued", "verifying", "ready", "merging", "merged", "failed", "conflict", "cancelled"],
                "description": "Status of merge queue item"
              },
              "verification_level": {
                "type": "string",
                "enum": ["minimal", "standard", "comprehensive"],
                "description": "Required verification level"
              },
              "quality_gates": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["lint", "test", "typecheck", "security", "coverage", "performance"]
                },
                "description": "Quality gates to run before merge"
              },
              "attempts": {
                "type": "integer",
                "minimum": 0,
                "description": "Number of merge attempts"
              },
              "max_attempts": {
                "type": "integer",
                "minimum": 1,
                "description": "Maximum merge attempts allowed"
              },
              "error": {
                "type": "string",
                "description": "Error message if merge failed"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Queue item creation time"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "Last update time"
              },
              "merge_commit": {
                "type": "string",
                "pattern": "^[a-fA-F0-9]{40}$",
                "description": "Commit hash after successful merge"
              }
            }
          }
        }
      }
    },
    "resource_allocation": {
      "type": "object",
      "description": "Resource allocation plan",
      "properties": {
        "assignments": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9_-]+$": {
              "type": "object",
              "required": ["adapter", "estimated_cost"],
              "properties": {
                "adapter": {
                  "type": "string",
                  "description": "Assigned adapter name"
                },
                "adapter_type": {
                  "type": "string",
                  "enum": ["deterministic", "ai"],
                  "description": "Type of assigned adapter"
                },
                "estimated_cost": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Estimated execution cost"
                },
                "priority": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "Execution priority"
                },
                "workflow": {
                  "type": "string",
                  "description": "Associated workflow ID"
                },
                "phase": {
                  "type": "string",
                  "description": "Associated phase ID"
                }
              }
            }
          },
          "description": "Task assignments to adapters"
        },
        "total_estimated_cost": {
          "type": "number",
          "minimum": 0,
          "description": "Total estimated cost for all tasks"
        },
        "estimated_usd_cost": {
          "type": "number",
          "minimum": 0,
          "description": "Estimated cost in USD"
        },
        "within_budget": {
          "type": "boolean",
          "description": "Whether allocation is within budget"
        }
      }
    },
    "execution_metrics": {
      "type": "object",
      "description": "Real-time execution metrics",
      "properties": {
        "active_workflows": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of currently executing workflows"
        },
        "completed_workflows": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of completed workflows"
        },
        "failed_workflows": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of failed workflows"
        },
        "total_cost_used": {
          "type": "number",
          "minimum": 0,
          "description": "Total cost consumed so far"
        },
        "budget_utilization": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Budget utilization percentage (0-1)"
        },
        "estimated_completion_time": {
          "type": "string",
          "format": "date-time",
          "description": "Estimated coordination completion time"
        },
        "parallel_efficiency": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Parallelization efficiency (0-1)"
        },
        "average_task_duration": {
          "type": "number",
          "minimum": 0,
          "description": "Average task execution time in seconds"
        }
      }
    },
    "quality_metrics": {
      "type": "object",
      "description": "Quality metrics from coordination execution",
      "properties": {
        "all_tests_passed": {
          "type": "boolean",
          "description": "Whether all quality gates passed"
        },
        "security_issues_found": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of security issues detected"
        },
        "code_coverage_delta": {
          "type": "number",
          "description": "Change in code coverage percentage"
        },
        "lint_violations": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of linting violations"
        },
        "typecheck_errors": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of type checking errors"
        }
      }
    },
    "coordination_status": {
      "type": "string",
      "enum": ["planning", "executing", "verifying", "merging", "completed", "failed"],
      "description": "Overall coordination session status"
    },
    "start_time": {
      "type": "string",
      "format": "date-time",
      "description": "Coordination session start time"
    },
    "end_time": {
      "type": "string",
      "format": "date-time",
      "description": "Coordination session end time"
    },
    "total_execution_time": {
      "type": "number",
      "minimum": 0,
      "description": "Total execution time in seconds"
    }
  }
}