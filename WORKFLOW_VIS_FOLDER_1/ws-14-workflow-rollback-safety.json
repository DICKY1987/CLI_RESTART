{
  "workstream_id": 14,
  "workstream_name": "Workflow Rollback & Safety",
  "branch_name": "ws/14-workflow-rollback-safety",
  "est_hours": "56h",
  "earliest_start_phase": "Phase 3 / Week 12",
  "blocked_by": ["Workflow Templates & Composition"],
  "priority_note": "High severity - Automatic rollback critical for safe zero-touch automation.",

  "objectives": [
    "Integrate automatic workflow rollback on failure",
    "Implement workflow versioning with migration tools",
    "Create workflow testing framework with mocking",
    "Ensure workflows can be safely modified and tested"
  ],

  "code_changes_summary": "This workstream implements workflow safety mechanisms including automatic rollback on failure integrated with the rollback command, workflow versioning to prevent breaking changes, and a dedicated testing framework for workflows with mock adapters and assertions. These capabilities ensure workflows can evolve safely.",

  "tasks": [
    {
      "id": "task-001",
      "description": "Integrate automatic rollback into workflow execution",
      "gap_ids": ["gap_WORKFLOW_004"],
      "files_to_create_or_modify": [
        "src/cli_multi_rapid/commands/rollback.py",
        "src/cli_multi_rapid/workflow_runner.py",
        ".ai/schemas/workflow.schema.json"
      ],
      "acceptance_criteria": [
        "Rollback integrated into WorkflowRunner.run()",
        "Rollback strategy configurable per step",
        "Automatic rollback on workflow failure",
        "Git snapshots created before workflows",
        "Rollback restores previous state completely",
        "Rollback operations logged with context"
      ],
      "test_plan": [
        "Execute workflow that fails mid-execution",
        "Verify automatic rollback triggered",
        "Verify repository restored to pre-workflow state",
        "Check rollback logs for details",
        "Test manual rollback command"
      ]
    },
    {
      "id": "task-002",
      "description": "Implement workflow versioning and migration",
      "gap_ids": ["gap_WORKFLOW_006"],
      "files_to_create_or_modify": [
        ".ai/schemas/workflow.schema.json",
        "src/cli_multi_rapid/workflows/migration.py",
        "scripts/migrate_workflows.py"
      ],
      "acceptance_criteria": [
        "Version field added to workflow schema",
        "Migration tool upgrades old workflows",
        "Breaking changes detected and prevented",
        "Migration script handles all workflow files",
        "Version compatibility checked on load"
      ],
      "test_plan": [
        "Create workflow with version 1.0",
        "Modify schema (version 2.0)",
        "Run migration tool",
        "Verify workflow upgraded to 2.0",
        "Load old workflow without migration, verify error"
      ]
    },
    {
      "id": "task-003",
      "description": "Create workflow testing framework",
      "gap_ids": ["gap_WORKFLOW_007"],
      "files_to_create_or_modify": [
        "src/cli_multi_rapid/testing/workflow_test_framework.py",
        "src/cli_multi_rapid/testing/mock_adapters.py",
        "tests/workflows/test_example_workflow.py"
      ],
      "acceptance_criteria": [
        "Workflow test framework with assertions",
        "Mock adapters for isolated testing",
        "Workflow fixtures for test data",
        "Step-level testing capabilities",
        "End-to-end workflow testing",
        "Test coverage for workflow logic"
      ],
      "test_plan": [
        "Write test for example workflow",
        "Use mock adapters to isolate",
        "Assert workflow behaves correctly",
        "Test failure scenarios",
        "Verify test framework is intuitive"
      ]
    }
  ],

  "git": {
    "repo_url": "https://github.com/DICKY1987/CLI_RESTART.git",
    "remote": "origin",
    "base_branch": "main",
    "auto_commit_and_push": true,
    "commands": [
      "git fetch origin",
      "git checkout -B ws/14-workflow-rollback-safety origin/main",
      "apply code changes (programmatic)",
      "git add -A",
      "git commit -m \"feat(workflow): add automatic rollback, versioning, and testing framework\"",
      "git push -u origin ws/14-workflow-rollback-safety"
    ],
    "commit_message_template": "feat(workflow): add automatic rollback, versioning, and testing framework\n\nIntegrate automatic workflow rollback on failure, implement workflow versioning\nwith migration tools, and create workflow testing framework.\n\nCloses: gap_WORKFLOW_004, gap_WORKFLOW_006, gap_WORKFLOW_007\nWorkstream: WS-14"
  },

  "safety_and_rollback": {
    "idempotent_reentry": true,
    "preflight_checks": [
      "ensure clean working tree",
      "sync with origin/main",
      "verify WS-07 completed (workflow templates)"
    ],
    "rollback_plan": [
      "git reset --hard origin/main",
      "git clean -fd",
      "if pushed, create revert PR"
    ]
  },

  "execution_notes": [
    "Single-developer constraint: Start only after WS-07 complete.",
    "Do not prompt for approval; execute automatically.",
    "Rollback capability critical for safe automation."
  ]
}
