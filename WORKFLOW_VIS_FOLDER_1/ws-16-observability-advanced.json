{
  "workstream_id": 16,
  "workstream_name": "Observability Advanced",
  "branch_name": "ws/16-observability-advanced",
  "est_hours": "36h",
  "earliest_start_phase": "Phase 3 / Week 13",
  "blocked_by": ["Observability Core"],
  "priority_note": "Medium priority - Advanced observability for debugging complex distributed workflows.",

  "objectives": [
    "Implement distributed tracing with OpenTelemetry",
    "Add cost attribution by workflow, user, and project",
    "Enable cross-workflow correlation for debugging",
    "Establish comprehensive observability for production"
  ],

  "code_changes_summary": "This workstream adds advanced observability capabilities with OpenTelemetry distributed tracing for multi-workflow coordination, detailed cost attribution for budgeting and chargebacks, and cross-workflow correlation for debugging complex execution graphs.",

  "tasks": [
    {
      "id": "task-001",
      "description": "Integrate OpenTelemetry distributed tracing",
      "gap_ids": ["gap_OBS_003"],
      "files_to_create_or_modify": [
        "src/cli_multi_rapid/observability/tracing.py",
        "src/cli_multi_rapid/workflow_runner.py",
        "src/cli_multi_rapid/coordination/workflow_coordinator.py",
        "config/telemetry_config.json"
      ],
      "acceptance_criteria": [
        "OpenTelemetry integrated into workflow execution",
        "Trace IDs propagate through coordinated workflows",
        "Spans created for each workflow step",
        "Trace context exported to Jaeger/Zipkin",
        "Distributed tracing visualization available"
      ],
      "test_plan": [
        "Execute coordinated workflows",
        "Check OpenTelemetry traces",
        "Verify trace IDs propagated",
        "View traces in Jaeger UI",
        "Verify cross-workflow correlation visible"
      ]
    },
    {
      "id": "task-002",
      "description": "Implement cost attribution system",
      "gap_ids": ["gap_OBS_006"],
      "files_to_create_or_modify": [
        "src/cli_multi_rapid/cost_tracker.py",
        "src/cli_multi_rapid/commands/cost_commands.py",
        "config/cost_attribution.json"
      ],
      "acceptance_criteria": [
        "Cost tracked per workflow execution",
        "Cost tracked per user",
        "Cost tracked per project/team",
        "cli-orchestrator cost report --by workflow/user/project",
        "Cost breakdown shows: tokens, API calls, compute time",
        "Budget alerts when thresholds exceeded"
      ],
      "test_plan": [
        "Execute workflows with AI usage",
        "Run cli-orchestrator cost report --by workflow",
        "Verify costs attributed correctly",
        "Run cli-orchestrator cost report --by user",
        "Verify breakdown accurate",
        "Set budget, exceed it, verify alert"
      ]
    }
  ],

  "git": {
    "repo_url": "https://github.com/DICKY1987/CLI_RESTART.git",
    "remote": "origin",
    "base_branch": "main",
    "auto_commit_and_push": true,
    "commands": [
      "git fetch origin",
      "git checkout -B ws/16-observability-advanced origin/main",
      "apply code changes (programmatic)",
      "git add -A",
      "git commit -m \"feat(observability): add distributed tracing and cost attribution\"",
      "git push -u origin ws/16-observability-advanced"
    ],
    "commit_message_template": "feat(observability): add distributed tracing and cost attribution\n\nIntegrate OpenTelemetry for distributed tracing and implement detailed cost\nattribution by workflow, user, and project.\n\nCloses: gap_OBS_003, gap_OBS_006\nWorkstream: WS-16"
  },

  "safety_and_rollback": {
    "idempotent_reentry": true,
    "preflight_checks": [
      "ensure clean working tree",
      "sync with origin/main",
      "verify WS-09 completed (observability core)",
      "verify opentelemetry-api installed"
    ],
    "rollback_plan": [
      "git reset --hard origin/main",
      "git clean -fd",
      "if pushed, create revert PR"
    ]
  },

  "execution_notes": [
    "Single-developer constraint: Start only after WS-09 complete.",
    "Do not prompt for approval; execute automatically.",
    "This workstream blocks WS-23 (VS Code extension needs tracing data)."
  ]
}
